爬蟲: 讓程式幫你上網

# 爬蟲 SOP
1. 打開原始碼(網址列的回覆)
2. 需要的東西
a. in 原始碼: 網址列
b. not in 原始碼: F12 -> 在Network裡找
JSON 格式 -> list + dict

# 路徑
1. 絕對路徑 -> C://xxxx/xxx/xxx
2. 相對路徑(相對目前檔案的位置)
a. 跟目前檔案同一個資料夾 -> xx.txt or ./xx.txt
b. 在目前檔案的前一層資料夾
../c.txt
c. 在目前檔案的前兩層資料夾
../../d.txt

a(dir) -- b(dir)     ---- main.py
d.txt  -- c.txt      ---- xx.txt

# pandas函式庫
CSV/TSV(Comma-Separated Values)/(TAB...)
姓名, 身高\n
Elwing, 175\n
"Elwing, Mr. Chou", 180

# 例題練習
1. google 好手氣(下載裡面的圖片)
Python內建資料庫 -> urllib(資料夾) -> request.py
a. urlopen(網址): 送出網址得到回覆
b. urlretrieve(網址, 指定下載位址): 送出網址得到回覆，回覆下載到指定位址

import os  # 所有跟作業系統有關的函示庫
import json
import urllib.request as req  # 給函式庫一個簡短的寫法

dn = "google"
if not os.path.exists(dn):  # 如果這個資料夾不存在
    os.makedirs(dn)  # 那就建立一個資料夾

url = "https://www.google.com/doodles/json/2022/5?hl=zh-TW"
response = req.urlopen(url)
# 另一種寫法: pics = json.load(response)
# 回應的是一種檔案類型: .read()
r = response.read()
pics = json.loads(r)

for p in pics:  # p的型態是字典
    print(p["title"])
    imgurl = "https:" + p["high_res_url"]
    print(imgurl)
    # urlretrieve(網址, 下載路徑)
    fn = imgurl.split("/")[-1]
    totalfn = dn + "/" + fn
    req.urlretrieve(imgurl, totalfn)
    print("-" * 30)

2. Youtube
1. 找到隱藏網址
f12 -> network -> 上方選擇Fetch/XHR(youtube上是串流影片，影片被分割成一塊一塊，不能算是完整的media) -> 找到第一個名稱開頭是video的(videoplayback)

1.1 確認正確檔名
Response Headers -> content-type: video/mp4

2. 下載完整影片
複製General裡第一個網址 -> 找到xxxx?參數=值&參數=值 -> 其中一段是&range=0-xxxx -> 刪除

3. 下載完整聲音
找到第二個名稱開頭是video的 -> 複製General裡第一個網址 -> 找到xxxx?參數=值&參數=值 -> 其中一段是&range=0-xxxx -> 刪除

3.1 確認正確檔名
Response Headers -> content-type: audio/webm

4. 轉檔 / 合併
Windows:
https://drive.google.com/file/d/1NG1jLgtNSMA8Gu_WKtfpa7a7sOsXoRiI/view?usp=sharing
有圖形化介面，操作簡單
ffmpeg / ffplay / ffprobe
轉檔(下載的聲音檔轉成mp3): FFQueue -> add -> ... -> 選擇自己下載的檔案 -> Outputfile改副檔名 -> savejob -> start
合併(將畫面及聲音檔合併):  addinputfile -> ... -> 選擇自己下載的檔案 -> 匯入的檔案每個都勾 -> Outputfile改副檔名 -> savejob -> start

MAC:
https://drive.google.com/file/d/1jeMX_L6j4iINj9f9pRXyddxeHPuLkQJu/view?usp=sharing
優點: 免費影片編輯的工具，由全世界工程師維護，可以大量上字幕 / 浮水印 / 合併影片
缺點: 沒有圖形化介面
轉檔: 終端機 -> 將目的地資料夾拖曳到終端機 -> 將ffmpeg拖曳到終端機 -> 按空格再加上-i -> 按空格再加上聲音檔(拖曳到終端機) -> 按空格再加上檔名.mp3
合併: ffmpeg -i 聲音 -i 影片 out.mp4

執行檔案 參數-參數名稱 參數值
cd 到
~ 根目錄

3. 巴哈姆特動畫瘋
1. 找到隱藏網址
f12 -> network -> 上方選擇Fetch/XHR -> 找到chunklist_b400000(播放清單)
danmuGet.php(彈幕)

2. 下載完整影片
複製General裡第一個網址 -> 打開終端機
Windows: -headers "Origin: https://ani.gamer.com.tw" -i "" output.mp4(自己設定檔名) -> 引號內加入影片網址
MAC: -headers 'Origin: https://ani.gamer.com.tw' -i '' output.mp4(自己設定檔名) -> 引號內加入影片網址

4. tabelog 以此網址為例: https://tabelog.com/tw/tokyo/rstLst/?SrtT=rt
請列印出商家中文名稱、日文名稱、菜的類別、評分、午餐價格、晚餐價格、網址
# from 基準點 import .py
from urllib.request import urlopen  # 只import需要用到的功能 
# 可讀性比較好
from bs4 import BeautifulSoup
url = "https://tabelog.com/tw/tokyo/rstLst/?SrtT=rt"
response = urlopen(url)
html = BeautifulSoup(response)  # 型態轉換 # 出現紅字不用緊張只是warning不是error
# 區塊.find/find_all(區塊html名字, 篩選條件class/id)
rs = html.find_all("li", {"class":"list-rst"})
# rs: [li, li, li, ...]
for r in rs:
    # r: 一個li區塊
    en = r.find("a", {"class":"list-rst__name-main"})
    ja = r.find("small", {"class":"list-rst__name-ja"})
    rtype = r.find("li", {"class":"list-rst__catg"})
    rating = r.find("b", {"class":"c-rating__val"})
    price = r.find_all("span", {"class":"c-rating__val"})
    # 型態擁有兩種東西: 1. 專屬功能 2. 專屬值 型態.值
    # html內容(專屬值的拿法): 區塊.text
    # html屬性(href): 區塊["href"]
    print(en.text)  # 中文名字
    print(ja.text)  # 日文名字
    print(rtype.text)  # 菜的類別
    print(rating.text)  # 評分
    print("午餐:", price[0].text)  # 午餐價格
    print("晚餐:", price[1].text)  # 晚餐價格
    print(en["href"])  # 網址
    print("-" * 30)
